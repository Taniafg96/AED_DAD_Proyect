/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import connection.ConnectDB;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;


/**
 *
 * @author Usuario
 */
public class Grafico extends javax.swing.JPanel {
    /**
     * Creates new form Grafico
     */
    public Grafico() {
        initComponents();
        c();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(230, 251, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 883, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 611, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void c(){
        int precioTotal = 200;
        int n2 = 400;
        int n3 = 300;
        
        DefaultCategoryDataset data = new DefaultCategoryDataset();
        for(Map.Entry<String, Integer> entryPrice : totalPriceProducts().entrySet()){
            for(Map.Entry<String, String> entryName : nameProducts().entrySet()){
                if(entryPrice.getKey().equals(entryName.getKey()))
                    data.setValue(entryPrice.getValue(), "Prodcucto", entryName.getValue());
            }
        }
        
        JFreeChart graphic = ChartFactory.createBarChart3D("PrecioProducto", 
                "Productos", "Precio", data,
                PlotOrientation.VERTICAL, true, true, false);
       
        ChartPanel panel = new ChartPanel(graphic);
        
        setLayout(new FlowLayout());
        add(new ChartPanel(graphic));
    }
    
    private HashMap <String, Integer> totalPriceProducts(){
        String consult = " SELECT\n" +
                         " SUM(PrecioTotal) as cantidad," +
                         " codigo_producto\n" +
                         " FROM Ventas\n"+
                         " GROUP BY codigo_producto";
        
        HashMap <String, Integer> map = new HashMap <> ();
        
        try(Connection CONNECT = new ConnectDB().getConetion();
                Statement stm = CONNECT.createStatement();){
                
            ResultSet rs = stm.executeQuery(consult);
            while(rs.next()){
                map.put(rs.getString("codigo_producto"), rs.getInt("cantidad"));
            }
            
            stm.close();
            CONNECT.close();
        }catch(SQLException ex){
            
        }
        
        return map;
    }
    
    private HashMap <String, String> nameProducts(){
         String consult = " SELECT\n" +
                         " codigo,\n" +
                         " nombre\n" +
                         " FROM Productos";
        
        HashMap <String, String> map = new HashMap <> ();
        
        try(Connection CONNECT = new ConnectDB().getConetion();
                Statement stm = CONNECT.createStatement();){
                
            ResultSet rs = stm.executeQuery(consult);
            while(rs.next()){
                map.put(rs.getString("codigo"), rs.getString("nombre"));
            }
            
            stm.close();
            CONNECT.close();
        }catch(SQLException ex){
            
        }
        
        return map;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
