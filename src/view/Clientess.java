/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Connection.ConnectDB;

/**
 *
 * @author Cristo
 */
public class Clientess extends javax.swing.JPanel {

    /**
     * Creates new form Clientess
     */
    public Clientess() {
        initComponents();
        mostrarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        fondo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        campoID = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        campoNombre = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        campoDireccion = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        campoTelefono = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        campoCorreo = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        btnInsertar = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnBorrar = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnActualizar = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fondo.setBackground(new java.awt.Color(230, 251, 255));
        fondo.setForeground(new java.awt.Color(153, 153, 153));

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Direccion", "Telefono", "Correo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaClientes.setSelectionBackground(new java.awt.Color(230, 251, 255));
        tablaClientes.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaClientes);

        campoID.setBackground(new java.awt.Color(230, 251, 255));
        campoID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        campoID.setForeground(new java.awt.Color(0, 148, 174));
        campoID.setText("Ingrese ID");
        campoID.setBorder(null);
        campoID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoIDMouseClicked(evt);
            }
        });
        campoID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoIDActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 148, 174));

        campoNombre.setBackground(new java.awt.Color(230, 251, 255));
        campoNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        campoNombre.setForeground(new java.awt.Color(0, 148, 174));
        campoNombre.setText("Ingrese Nombre");
        campoNombre.setBorder(null);
        campoNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoNombreMouseClicked(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(0, 148, 174));

        campoDireccion.setBackground(new java.awt.Color(230, 251, 255));
        campoDireccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        campoDireccion.setForeground(new java.awt.Color(0, 148, 174));
        campoDireccion.setText("Ingrese Direccion");
        campoDireccion.setBorder(null);
        campoDireccion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoDireccionMouseClicked(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(0, 148, 174));

        campoTelefono.setBackground(new java.awt.Color(230, 251, 255));
        campoTelefono.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        campoTelefono.setForeground(new java.awt.Color(0, 148, 174));
        campoTelefono.setText("Ingrese Telefono");
        campoTelefono.setBorder(null);
        campoTelefono.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoTelefonoMouseClicked(evt);
            }
        });

        jSeparator4.setBackground(new java.awt.Color(0, 148, 174));

        campoCorreo.setBackground(new java.awt.Color(230, 251, 255));
        campoCorreo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        campoCorreo.setForeground(new java.awt.Color(0, 148, 174));
        campoCorreo.setText("Ingrese Correo");
        campoCorreo.setBorder(null);
        campoCorreo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoCorreoMouseClicked(evt);
            }
        });

        jSeparator5.setBackground(new java.awt.Color(0, 148, 174));

        jPanel1.setBackground(new java.awt.Color(0, 159, 193));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        btnInsertar.setBackground(new java.awt.Color(0, 159, 193));
        btnInsertar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnInsertar.setForeground(new java.awt.Color(255, 255, 255));
        btnInsertar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnInsertar.setText("INSERTAR");
        btnInsertar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInsertar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnInsertar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnInsertar, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(0, 159, 193));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        btnBorrar.setBackground(new java.awt.Color(0, 159, 193));
        btnBorrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBorrar.setForeground(new java.awt.Color(255, 255, 255));
        btnBorrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBorrar.setText("BORRAR");
        btnBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBorrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(0, 159, 193));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        btnActualizar.setBackground(new java.awt.Color(0, 159, 193));
        btnActualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnActualizarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnActualizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(0, 159, 193));
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));

        btnBuscar.setBackground(new java.awt.Color(0, 159, 193));
        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnBuscar.setText("BUSCAR");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(0, 159, 193));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setBackground(new java.awt.Color(0, 159, 193));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("RESTABLECER");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jLabel6.setBackground(new java.awt.Color(0, 159, 193));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 159, 193));
        jLabel6.setText("CLIENTES");

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1)
                            .addComponent(campoID)
                            .addComponent(jSeparator2)
                            .addComponent(campoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(jSeparator3)
                            .addComponent(campoDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(jSeparator4)
                            .addComponent(campoTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(jSeparator5)
                            .addComponent(campoCorreo, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))))
        );
        fondoLayout.setVerticalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addComponent(campoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(95, 95, 95))
        );

        jPanel2.add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1050, 610));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void campoIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoIDActionPerformed

    }//GEN-LAST:event_campoIDActionPerformed

    private void campoIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoIDMouseClicked
        campoID.setText("");
    }//GEN-LAST:event_campoIDMouseClicked

    private void campoNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoNombreMouseClicked
        campoNombre.setText("");
    }//GEN-LAST:event_campoNombreMouseClicked

    private void campoDireccionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoDireccionMouseClicked
        campoDireccion.setText("");
    }//GEN-LAST:event_campoDireccionMouseClicked

    private void campoTelefonoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoTelefonoMouseClicked
        campoTelefono.setText("");
    }//GEN-LAST:event_campoTelefonoMouseClicked

    private void campoCorreoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoCorreoMouseClicked
        campoCorreo.setText("");
    }//GEN-LAST:event_campoCorreoMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        limpiar();
        mostrarTabla();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void btnInsertarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertarMouseClicked
        //Variables que contendran los datos insertados en los campos: ID, NOMBRE, DIRECCION, TELEFONO, CORREO
        String id = campoID.getText();
        String nombre = campoNombre.getText();
        String direccion = campoDireccion.getText();
        String telefono = campoTelefono.getText();
        String correo = campoCorreo.getText();
        
        if(id.equals("Ingrese ID") || id.isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe introducir id para poder actualizar ");
        }else{
           try {
                //Establecer conexion
                Connection con = new ConnectDB().getConetion();

                //Insertar campos
                PreparedStatement ps = con.prepareStatement("insert into clientes (Id, Nombre, Direccion, Telefono, Correo) values (?,?,?,?,?)");
                ps.setString(1, id);
                ps.setString(2, nombre);
                ps.setString(3, direccion);
                ps.setString(4, telefono);
                ps.setString(5, correo);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Información Almacenada correctamente");
                limpiar();
                mostrarTabla();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());
                limpiar();
            } 
        }
    }//GEN-LAST:event_btnInsertarMouseClicked

    private void btnBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarMouseClicked
        String id = campoID.getText();
        
        if(id.equals("Ingrese ID") || id.isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe introducir un ID existente");
        }else{
            try {
                //Establecer conexion
                Connection con = new ConnectDB().getConetion();

                //Borrar
                PreparedStatement ps = con.prepareStatement("delete from clientes where Id=?");
                ps.setString(1, campoID.getText());
                int respuesta = JOptionPane.showConfirmDialog(null, "¿Está seguro que quiere borrar la fila?", "", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
                if(respuesta == 0){
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Datos eliminados correctame");
                    limpiar();
                    mostrarTabla();
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());
            } 
        }
        
        
    }//GEN-LAST:event_btnBorrarMouseClicked

    private void btnActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseClicked
         //Variables que contendran los datos insertados en los campos: ID, NOMBRE, DIRECCION, TELEFONO, CORREO
        String id = campoID.getText();
        String nombre = campoNombre.getText();
        String direccion = campoDireccion.getText();
        String telefono = campoTelefono.getText();
        String correo = campoCorreo.getText();

        if(id.equals("Ingrese ID") || id.isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe introducir id para poder actualizar ");
        }else{
            try {
                //Establecer conexion
                Connection con = new ConnectDB().getConetion();

                //Insertar campos
                PreparedStatement ps = con.prepareStatement("update clientes set nombre=?, direccion=?, telefono=?, correo=? where id=?");
                ps.setString(1, nombre);
                ps.setString(2, direccion);
                ps.setString(3, telefono);
                ps.setString(4, correo);
                ps.setString(5, id);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Información actualizada correctamente");
                limpiar();
                mostrarTabla();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.toString());
                limpiar();
            }
        }
    }//GEN-LAST:event_btnActualizarMouseClicked

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        //Variables que contendran los datos insertados en los campos: ID, NOMBRE, DIRECCION, TELEFONO, CORREO
        String id = campoID.getText();
        
        if(id.equals("Ingrese ID") || id.isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe introducir id para poder hacer una búsqueda ");
        }else{
            Connection con = new ConnectDB().getConetion();
            limpiar();
            mostrarTablaBusqueda(id); 
        }
    }//GEN-LAST:event_btnBuscarMouseClicked
    
    //Esto nos permitirá seleccionar una fila directamente en la tabla y que se rellenen los campos
    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
        try {
            //Variable apra saber que fila se está seleccionando
            int fila = tablaClientes.getSelectedRow();
            //Variable que conttenga el ID de la fila seleccionada
            String Id = tablaClientes.getValueAt(fila, 0).toString();
            
            //Establecer conexion
            Connection con = new ConnectDB().getConetion();
            
            //Insertar campos
            PreparedStatement ps;
            ResultSet rs;
            ps = con.prepareStatement("select nombre, direccion, telefono, correo from clientes where id=?");
            ps.setString(1, Id);
            rs = ps.executeQuery();
            
            //Recorremos resultado de la consulta y establecemos los valores a los campos correspondientes
            while(rs.next()){
                campoID.setText(Id);
                campoNombre.setText(rs.getString("Nombre"));
                campoDireccion.setText(rs.getString("Direccion"));
                campoTelefono.setText(rs.getString("Telefono"));
                campoCorreo.setText(rs.getString("Correo"));
            }
                
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_tablaClientesMouseClicked

    //Metodo que nos permitirá limpiar los campos: ID, NOMBRE, DIRECCION, ETC
    private void limpiar(){
        campoID.setText("Ingrese ID");
        campoNombre.setText("Ingrese Nombre");
        campoDireccion.setText("Ingrese Direccion");
        campoTelefono.setText("Ingrese Telefono");
        campoCorreo.setText("Ingrese Correo");
    }
    
     //Metodo para mostrar tabla
    private void mostrarTabla(){
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        
        //Nos agrega diseño directamente desde el Panel, usando la tabla creada. Evitando así hacer todo el diseño manualmente
        DefaultTableModel dtm = (DefaultTableModel) tablaClientes.getModel();
        //Al poner la cuenta a 0 conseguimos que la información no se repita, sino que se reinicie
        dtm.setRowCount(0);
        
        try {
            Connection con = new ConnectDB().getConetion();
            ps = con.prepareStatement("select Id, Nombre, Direccion, Telefono, Correo from Clientes");
            rs = ps.executeQuery();
            
            //Nos permite obtener los metadatos de la consulta para asi obtener la cantidad de columnas de la tabla
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            
            //Obtener datos de consulta
            while(rs.next()){
                //Aquí podemos ver para que nos ibamos a necesitar la variable columnas.
                //Con ella le daremos un tamño al array
                Object [] fila = new Object [columnas];
                for (int i=0; i<columnas; i++){
                    fila[i] = rs.getObject(i+1);
                }
                dtm.addRow(fila);
            }
            
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
    
    //Método para mostrar tabla tras Busqueda
    private void mostrarTablaBusqueda(String id){
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        
        //Nos agrega diseño directamente desde el Panel, usando la tabla creada. Evitando así hacer todo el diseño manualmente
        DefaultTableModel dtm = (DefaultTableModel) tablaClientes.getModel();
        //Al poner la cuenta a 0 conseguimos que la información no se repita, sino que se reinicie
        dtm.setRowCount(0);
        
        try {
            Connection con = new ConnectDB().getConetion();
            ps = con.prepareStatement("select Id, Nombre, Direccion, Telefono, Correo from Clientes where id=?");
            ps.setString(1, id);
            rs = ps.executeQuery();
            
            //Nos permite obtener los metadatos de la consulta para asi obtener la cantidad de columnas de la tabla
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
            
            //Obtener datos de consulta
            while(rs.next()){
                //Aquí podemos ver para que nos ibamos a necesitar la variable columnas.
                //Con ella le daremos un tamño al array
                Object [] fila = new Object [columnas];
                for (int i=0; i<columnas; i++){
                    fila[i] = rs.getObject(i+1);
                }
                dtm.addRow(fila);
            }
            
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnActualizar;
    private javax.swing.JLabel btnBorrar;
    private javax.swing.JLabel btnBuscar;
    private javax.swing.JLabel btnInsertar;
    private javax.swing.JTextField campoCorreo;
    private javax.swing.JTextField campoDireccion;
    private javax.swing.JTextField campoID;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoTelefono;
    private javax.swing.JPanel fondo;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables
}
